<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Practical Exercises</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/MainStyles.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/StylesForHomePage.css" rel="stylesheet" />
        <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:200,300,400,600,700" rel="stylesheet" />
        <link href="../../Resources/Scripts/accordion.css" rel="stylesheet" />
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat:400,700" type="text/css">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" type="text/css" >
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.1/jquery.min.js" type="text/css" />
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat:400,700" type="text/css" />
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" type="text/css" />

        <style>
           

.button.previous-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/previous_section_button_1.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/next_section_button_1.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
        <script src="../../Resources/Scripts/accordion.js">
        </script>
        
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div>
                        <nav class="title-bar tab-bar" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../Home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="6" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" placeholder="Search" />
                                                <div class="search-filter-wrapper">
                                                    <div class="search-filter">
                                                        <div class="search-filter-content">
                                                            <ul>
                                                                <li>All Files</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search">
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container" data-mc-content-body="True">
                                <div class="nav-header-rule">
                                    <hr width="100%" size="0" text-align="center" />
                                </div>
                                <div class="nav-header"><a href="../Home.htm" class="nav-header">Journey Creator Knowledge Center</a>
                                </div>
                                <div id="contentBody">
                                    <div>
                                        <!-- <div class="sideContent">
                                            <div class="toolbar-position">
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent">
                                                    <div class="button-group-container-left">
                                                        <button class="button needs-pie previous-topic-button" title="Previous Section">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                                        </button>
                                                        <button class="button needs-pie next-topic-button" title="Next Section">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                                        </button>
                                                        <button class="button needs-pie print-button" title="Print">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div> -->
                                        <div class="ContentRow" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                            <div>
                                                <h1 xmlns="">Additional Learning Exercises</h1>
                                                <h2><p class="BodyText" xmlns="">This page contains helpful video resources that you can use to learn more about Journey Creator.</p>
                                                <h3><p class="BodyText" xmlns=""><b>Creating an address validator application:</b>(~20 minutes of learning content)</p></h3>
                                                <!--Testing some bullshit-->
                                                     

<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat:400,700" type="text/css">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" type="text/css" >





<ul class="accordion">
  <li class="accordion-chevron">
    <a class="accordion-toggle" href="javascript:void(0);"><i class="fa fa-chevron-down"></i>Address Validation App</a>
    <ul class="accordion-inner">
      <!-- 1st nested -->
      <li class="accordion-chevron">
          <a class="accordion-toggle" href="#"><i class="fa fa-chevron-down"></i><b>Part 1</b>: Logging in. </a>
          <div class="accordion-inner">
              <p><div style="font-family: Arial;"><p class="BodyText" xmlns="" z-index=12> Go to the DXP login page and enter your username and password. Also, go to the preview URL; this will be used to view the front-end of your DXP application once it has been deployed to the app engine.<br><br><b><u>Video 1</u>:</b><p><iframe width="560" height="315" src="../resources/videos/addrval001_1.mp4" allowfullscreen></iframe>
              </p>
                 </p></div></p>

            </div>
        </li>
        <li class="accordion-chevron">
                <a class="accordion-toggle" href="#"><i class="fa fa-chevron-down"></i><b>Part 2</b>: Creating a project. </a>
                <div class="accordion-inner">
                    <p><div style="font-family: Arial;"><p class="BodyText" xmlns="" z-index=12> A project is just a place to store all of your work. You could share a project with someone else but for today we are going to use our own. Click on the admin icon in the upper right corner, and the projects sub-tab. Click "New Project" to create one. Add a name, and upload an image, which will make it easier to find in the project carousel.<br><br><b><u>Video 2</u>:</b><p><iframe width="560" height="315" src="../resources/videos/addrval002.mp4" allowfullscreen></iframe>
                    </p>
                       </p></div></p>
      
                  </div>
              </li>
              <li class="accordion-chevron">
                    <a class="accordion-toggle" href="#"><i class="fa fa-chevron-down"></i><b>Part 3</b>: Creating an application. </a>
                    <div class="accordion-inner">
                        <p><div style="font-family: Arial;"><p class="BodyText" xmlns="" z-index=12> An application is similar in scope to a website. It encompasses all of the pages on a site, such as registration, login, profile, billing, and whatever else a page might contain. Applications have an icon that looks like a folder. Once you've found your project in the carousel, click on the 'Add Application' button in the bottom left of the navigation side menu.<br><br><b><u>Video 3</u>:</b><p><iframe width="560" height="315" src="../resources/videos/addrval002.mp4" allowfullscreen></iframe>
                        </p>
                           </p></div></p>
          
                      </div>
                  </li>             <li class="accordion-chevron">
                    <a class="accordion-toggle" href="#"><i class="fa fa-chevron-down"></i><b>Part 3</b>: Creating an application. </a>
                    <div class="accordion-inner">
                        <p><div style="font-family: Arial;"><p class="BodyText" xmlns="" z-index=12> An application is similar in scope to a website. It encompasses all of the pages on a site, such as registration, login, profile, billing, and whatever else a page might contain. Applications have an icon that looks like a folder. Once you've found your project in the carousel, click on the 'Add Application' button in the bottom left of the navigation side menu.<br><br><b><u>Video 3</u>:</b><p><iframe width="560" height="315" src="../resources/videos/addrval003.mp4" allowfullscreen></iframe>
                        </p>
                           </p></div></p>
          
                      </div>
                  </li>
                  <li class="accordion-chevron">
                        <a class="accordion-toggle" href="#"><i class="fa fa-chevron-down"></i><b>Part 4</b>: Creating a business feature. </a>
                        <div class="accordion-inner">
                            <p><div style="font-family: Arial;"><p class="BodyText" xmlns="" z-index=12> A business feature is similar to a single page in a website. Registration might be a business feature. Viewing your shopping cart is a business feature. Choosing a shipping option is a business feature. Business features have an icon that is a square made of 9 smaller squares. For the address validation app, we'll be creating two business features: One is an abbreviation of Address Validation, in camel case: addrVal. The other is a placeholder, so you can name it anything. I'm going to name mine 'TheEnd'.<br><br><b><u>Video 4</u>:</b><p><iframe width="560" height="315" src="../resources/videos/addrval004.mp4" allowfullscreen></iframe>
                            </p>
                               </p></div></p>
              
                          </div>
                      </li>
                      <li class="accordion-chevron">
                            <a class="accordion-toggle" href="#"><i class="fa fa-chevron-down"></i><b>Part 5</b>: Adding a step. </a>
                            <div class="accordion-inner">
                                <p><div style="font-family: Arial;"><p class="BodyText" xmlns="" z-index=12> A step can be a single act on a webpage, such as entering a message and clicking 'submit'. In e-Commerce, entering your name and address is a step, while entering billing information could be the same step or a different step depending on how the developer sets up the page. To create a step, hover over the address validation business feature. Again: A business feature looks like a square made of nine smaller squares. Hover over the business feature until a 3-dot menu icon appears. Click on this icon to bring up the options to create, edit, or delete a step. Click the plus sign that comes up to create your step. Name this step 'Check Address', abbreviated as shown: checkAddr. Using the pulldown menu, assign it a 'Simple Form' template so a form will appear for the user when they're prompted to enter their address.<br><br><b><u>Video 5</u>:</b><p><iframe width="560" height="315" src="../resources/videos/addrval005.mp4" allowfullscreen></iframe>
                                </p>
                                   </p></div></p>
                  
                              </div>
                          </li>
                          <li class="accordion-chevron">
                                <a class="accordion-toggle" href="#"><i class="fa fa-chevron-down"></i><b>Part 6</b>: Adding Data to the Application. </a>
                                <div class="accordion-inner">
                                    <p><div style="font-family: Arial;"><p class="BodyText" xmlns="" z-index=12> Now we created nothing but a shell of a webpage. It has nowhere for a user to enter anything or click on anything. Our user needs to be prompted if they want to enter anything. So we are going to build that framework next. We do this in the Data Editor tab, which is all the way up top in the UI, next to App Builder tab. Click on the Data Editor tab. Five options come up in the subtab, each of which we will cover througout this exercise. For now, select the ADM, or Application Data Model, tab. Now, click the + Object button to create a new object. We'll name this object "serviceAddress". When you've saved the object, we are going to assign some properties to it. Select the Service Address object and click the Plus Property button to add a new property. Name this property "addr1", for 'address line one'. By default this property is a string, so if it is not set to string please click string before you save. Now, repeat the process of highlighting the 'Service Address' object and creating new properties for the following: addr2, city, state, and zip. If you forget to click on the service address before assigning a property, the property won't be properly 'nested', and that is an easy fix: Just click and drag the property back into the service object.<br><br><b><u>Video 6</u>:</b><p><iframe width="560" height="315" src="../resources/videos/addrval006.mp4" allowfullscreen></iframe>
                                    </p>
                                       </p></div></p>
                      
                                  </div>
                              </li>
                              <li class="accordion-chevron">
                                    <a class="accordion-toggle" href="#"><i class="fa fa-chevron-down"></i><b>Part 7</b>: Adding List Validation. </a>
                                    <div class="accordion-inner">
                                        <p><div style="font-family: Arial;"><p class="BodyText" xmlns="" z-index=12> There are different types of validation to make sure someone's not wasting our bandwidth. Today, we're going to use a 'list' pulldown so people don't put something useless under the 'State' in the address. We will demonstrate how to make a pull-down list which prevents the customer from entering something that is not on the list. If you click on the Service Address object to open it, and then choose the 'state' property, and click 'edit', you'll see three tabs: Property, Privacy, and Validation. Click on Validation to add a list. Here, you can add a minimum and maximum character length for a field, a regular expression, or 'regex', or a pre-defined list. However, when we need to create the list first, because no lists are available. Let's create a list by clicking on the tab up top next to ADM called 'ARD', for 'Application Reference Data'. You can abandon changes since we didn't make any. Once you're in the ARD tab you'll see the option to make a new list appear. Click 'New List'. Let's call this list 'USStates'. Now, add a few state abbreviations such as NJ, AZ, CA, and so on. After entering a state you can either hit enter to move to the next line or click the 'Add Value' button. Once you have all of the states you want, click 'Save' and let's return to the ADM tab. Once again, click the Service Address object. Then, click the States property. Click edit, and move over to the validation tab. Now, when you switch on the 'List' validation, you'll see the U-S States list we created. Select it and click save. You have now created a pulldown for the customer where they can only choose one of the states that is on your list. Now that the service address object is done, let's create another object: We'll call it "geoCode". This is the portion of the application which will display the latitude and longitude coordinated of a given address, if that address is valid. Once you've created the geoCode object, highlight it and add a property. The first property will be latitude. This time, click the icon representing 'number' because latitude and longitude will be returned as numbers. Once you've saved latitude, create a number-type property called 'longitude' as well.<br><br><b><u>Video 7</u>:</b><p><iframe width="560" height="315" src="../resources/videos/addrval007.mp4" allowfullscreen></iframe>
                                        </p>
                                           </p></div></p>
                          
                                      </div>
                                  </li>
                                  <li class="accordion-chevron">
                                        <a class="accordion-toggle" href="#"><i class="fa fa-chevron-down"></i><b>Part 8</b>: Adding the Data to the Step.  </a>
                                        <div class="accordion-inner">
                                            <p><div style="font-family: Arial;"><p class="BodyText" xmlns="" z-index=12> Now, we have to tell the website what data to display. On the left navigation menu, click the 'checkAddr' step. If you can not see the checkAddr step, click on the addrVal application, then the addrVal business feature, then the check address step we created earlier will display. Once you've highlighted check address, click 'edit' on the far right. Three sub-tabs appear: Data Profile, Integrations and Rules, and UX Config. In the Data Profile tab, under ADM Library, you'll see an icon for each of the objects you created earlier. Click and drag the service address icon over to the data profile under the checkAddr step. Next, click on the Integrations and Rules tab. There are three options below; all that you need to do is click the button marked 'create' and then save your work. With that, we are free to preview our webpage.  On the three tabs in the upper right, click 'preview'. Both of your business features pop up. In the preview pane, click the addrVal business feature, and then the checkAddr step. The application won't validate an address yet, because we haven't programmed in an integration yet, but you can check that your fields are displaying and that your pull-down list of USStates is working correctly."<br><br><b><u>Video 8</u>:</b><p><iframe width="560" height="315" src="../resources/videos/addrval008.mp4" allowfullscreen></iframe>
                                            </p>
                                               </p></div></p>
                              
                                          </div>
                                      </li>
                                      <li class="accordion-chevron">
                                            <a class="accordion-toggle" href="#"><i class="fa fa-chevron-down"></i><b>Part 9</b>: Making an Application Flow.  </a>
                                            <div class="accordion-inner">
                                                <p><div style="font-family: Arial;"><p class="BodyText" xmlns="" z-index=12> An application needs to know what to do first and what to do second and so on. Even though ours only has one step, we have to connect these and tell the application what to do first. In the left-side navigation menu, click on the addrVal app. Click 'edit'. Now, drag the addrVal business feature from the right to the left. Then, drag your second busienss feature from right to left. You'll notice two errors at the bottom of your screen: One states that we have unconnected features, and one states that we don't have a start feature. Let's fix the first error by clicking on the small square on the addrVal pill icon and dragging to the second business feature to connect them. Next, let's define a start feature by clicking on the addrVal business feature pill icon to bring up the 3-dot menu icon. Click on the menu icon, then select the 'Make Start' icon that pops up. Click save when you are done.<br><br><b><u>Video 9</u>:</b><p><iframe width="560" height="315" src="../resources/videos/addrval009.mp4" allowfullscreen></iframe>
                                                </p>
                                                   </p></div></p>
                                  
                                              </div>
                                        </li>
                                        <li class="accordion-chevron">
                                            <a class="accordion-toggle" href="#"><i class="fa fa-chevron-down"></i><b>Part 10</b>: Adding a Translation.  </a>
                                            <div class="accordion-inner">
                                                <p><div style="font-family: Arial;"><p class="BodyText" xmlns="" z-index=12> If we preview right now, the form has a few places to enter data. None of the prompts make much sense and if a user saw this website they'd probably assume it's broken, because instead of saying something like 'Enter Your Address' it says 'hb.serviceaddress.addr1'. So we need to tell it how to translate into language that the user can understand. Let's go back to the Data Editor tab, then click on the Translations sub-tab. You'll notice that no translations are currently programmed in, so let's create one. Click the plus add new button to add a new translation. In the editing pane, start typing English, then space, then hyphen, then space, then start typing 'United Kingdom'. Hit save once you have English, United Kingdom, selected. Then, click on the translation in the translations menu. Click Edit again and we can enter some customer-facing translations for our form. You'll notice that the properties and objects we created are on the left, and their corresponding translation fields are on the right. So on the line that matches up with addr1, let's type 'Address Line 1'. Then the next line is 'Address Line 2', followed by 'City', 'State', and 'Zip Code'. To save some time, let's also enter 'Latitude' and 'Longitude' in their corresponding fields below. When you are done, hit save. Going back to the App Builder, click on 'Preview' to see your app, but before you click on anything else, choose the gear icon to enter the settings menu. We have to assign this translation so once you're in the settings menu click on 'Simulate UI Client'. Under Locale, choose the English United Kingdom option you created earlier. Hit save, and when the option comes up to start the preview over, accept that option. This time, when you click through to the Check Address step, you'll see that the form is now populated with your translations, prompting the user to enter address line 1, address line 2, and so on.<br><br><b><u>Video 10</u>:</b><p><iframe width="560" height="315" src="../resources/videos/addrval010.mp4" allowfullscreen></iframe>
                                                </p>
                                                    </p></div></p>
                                    
                                            </div>
                                        </li>
                                        <li class="accordion-chevron">
                                                <a class="accordion-toggle" href="#"><i class="fa fa-chevron-down"></i><b>Part 11</b>: Integrating with an API call.  </a>
                                                <div class="accordion-inner">
                                                    <p><div style="font-family: Arial;"><p class="BodyText" xmlns="" z-index=12> What we have created is something that prompts a user and asks them to enter an address. When they enter the address, nothing happens yet. We now need to integrate a service provider and perform an API call on that.<br>Go to the Integrate tab. By default this brings up the "Service" sub-tab, and you'll notice that there are no service providers in the pull-down menu, so we'll have to create one.<br>Click on the Service Providers sub-tab. Click "Add new". Call it Avalara. 
                                                        (<em>Avalara is an address validation API belonging to Avatax, which is a tax calculation website</em>).
                                                        Now that it exists, we can go back to the Services tab and you can use the pull-down menu to select it. In the Services tab, with Avalara selected, click "+Add Service". You only need to change the following fields:
                                                        <ul><li>Name: addrVal</li>
                                                        <li>HTTP Protocol: HTTPS</li>
                                                        </ul>
                                                        (Note: <em>We're using HTTPS because Avalara requires a username, password, and API key. You might be able to get away with just HTTP if it only required an API key</em>)<br>
                                                        In the HTTP Basic Auth pull-down, nothing is available, because we have to create it as part of our endpoint. Click save for now and we will come back later to complete this step.
                                                        <br>Once that is saved, we need to add an endpoint and invocation to our service, starting with the endpoint. Click on the Authentication subtab, and use the pull-down menu to select Avalara. Select the new option that pops up and click "Edit". Enter the following information in the grey box on the right:<br>
                                                        <ul><li>Endpoint name: "avalaraTest"</li><li>Host: "rest.avatax.com"</li><li>Port: "443"</li><li>Operation URL: /api/v2/addresses/resolve</li></ul><br>
                                                        Now click on the sub-tab marked "HTTP Basic Auth", which is next to the "Endpoints" sub-tab. In the Name, Username, and Password blocks, enter the following information in those respective fields:
                                                        <ul><li>AvalaraUser</li><li>1100012580</li><li>85FC3690319455CD</li></ul>
                                                        <br> The app needs an invocation in order to perform this API call. Click on the Services subtab, click on the addrVal bar, and click _+ Add Invocation. Set the name of this invocation to addrVal, and use the pulldown menu for the last field to choose the Endpoint of avalaraTest. Click save to continue.<br>
                                                        Finally, it is time to add the endpoint to our service. Click the addrVal bar, and click "edit". Name this "addrVal" if you haven't already, use the pull-down menu to choose HTTPS instead of HTTP, and for the last field change the HTTP Basic Auth tab to AvalaraUser. Click save to continue.<br><br><b><u>Video 11</u>:</b><p><iframe width="560" height="315" src="../resources/videos/addrval011.mp4" allowfullscreen></iframe>
                                                    </p>
                                                    </p></div></p>
                                        
                                            </div>
                                        </li>
                                        <li class="accordion-chevron">
                                            <a class="accordion-toggle" href="#"><i class="fa fa-chevron-down"></i><b>Part 12</b>: Mapping Data.  </a>
                                            <div class="accordion-inner">
                                                    <p><div style="font-family: Arial;"><p class="BodyText" xmlns="" z-index=12> Download the avalara-request.json and avalara-response.json files from <a href="https://github.com/dxp-learning/addrVal/archive/master.zip">here</a>. Then, in the  Services tab, click the bar that says "addrVal", then on the far right side click the down arrow to expan, and then on the left side a pill icon will appear that also says "addrVal". Click that, and the "Map Data" option with two crossed arrows will become clickable in the upper right. Click on Map Data.<br><br><b><u>Video 12</u>:</b><p><iframe width="560" height="315" src="../resources/videos/addrval012.mp4" allowfullscreen></iframe>
                                                    </p>
                                                    </p></div></p>
                                        
                                            </div>
                                        </li>
                                        <li class="accordion-chevron">
                                            <a class="accordion-toggle" href="#"><i class="fa fa-chevron-down"></i><b>Part 13</b>: Final Build </a>
                                            <div class="accordion-inner">
                                                    <p><div style="font-family: Arial;"><p class="BodyText" xmlns="" z-index=12> do stuff. <br><br><b><u>Video 13</u>:</b><p><iframe width="560" height="315" src="../resources/videos/addrval013.mp4" allowfullscreen></iframe>
                                                    </p>
                                                </p></div></p>
                                            
                                            </div>
                                        </li>
                                          
        <!-- 2nd nested, same level -->


    </ul>
  </li>
  
  


<!-- End of Accordion  -->
</ul>






                         
                                                
<p></p>
<!--Begin 2nd accordion-->

<!--This script enables accordions to open but also closes open sub-menus when you open a new one. Put it in the final accordion.-->
        <script type="text/javascript">
            /*<![CDATA[*/
            $('.accordion-toggle').click(function(e) {
            e.preventDefault();  
            $("a:first-of-type").removeClass('chev');
        
            var $this = $(this);
            if ($this.next().hasClass('show')) {
            $this.next().removeClass('show');
            $this.next().slideUp(350);
            } else {
            $this.parent().parent().find('li .accordion-inner').removeClass('show');
            $this.parent().parent().find('li .accordion-inner').slideUp(350);
            $this.toggleClass('chev');
            $this.next().toggleClass('show');
            $this.next().slideToggle(350);
            }
            });
            /*]]>*/
        </script>
      
      <!-- End of Accordion  -->
      </ul>
     



                                        <!-- </li> -->
                                        
                                            </div>

                                            <div>
                                                <div data-sticky-container="" id="mDen3yfM80ilMKjiGqO6Mw" xmlns="">
                                                    <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="mDen3yfM80ilMKjiGqO6Mw:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="small" data-scroll-container-on="small">
                                                        <ul class="nocontent menu _Skins_SideMenuFixed mc-component" data-mc-linked-toc="Data/Tocs/Overview.js" data-mc-side-menu="True" data-mc-max-depth="-1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="False" data-mc-toc="True">
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="footer">
                                        <div class="HomeMasterPageFooter outer-row">
                                            <div><a href="../Home.htm"><img src="../Resources/Images/Sync_Logo_RGB_color_reverse_250.png" alttext="" class="Hyperlinked footer-logo" /></a>
                                                <p class="Copyright">&#160;</p>
                                                <p class="Copyright"> <b>Corporate Headquarters</b><br /> 200 Crossing Blvd.<br />Bridgewater, NJ 08807</p>
                                                <p class="Copyright">&#160;</p>
                                                <!-- <p class="Copyright">Copyright © <MadCap:variable name="General.Year" /> <MadCap:variable name="General.CompanyName" /></p> -->
                                                <p class="Copyright">© Synchronoss <span class="GeneralYear">2019</span> <a href="https://synchronoss.com/terms-of-use/">Terms of Use</a> | <a href="https://synchronoss.com/privacy-policy/">Privacy Notice</a> | <a href="https://synchronoss.com/wp-content/uploads/Synchronoss-Cookie-Policy.pdf">Cookie Policy</a><br /> <a href="https://synchronoss.com/wp-content/uploads/Zentry-Privacy-Notice.pdf">Zentry Privacy Notice</a> | <a href="https://synchronoss.com/wp-content/uploads/Modern-Slavery-Statement.pdf">Modern Slavery Statement</a> | <a href="https://synchronoss.com/virtual-patent-marking/">Patents</a></p>
                                            </div>
                                            <!-- <div class="footer-icons"><a href="https://twitter.com/synchronoss" target="_blank"><img src="../Images/twitter_white.svg" alttext="" class="Hyperlinked" style="width: 20px;" /></a><a href="https://www.linkedin.com/company/synchronoss-technologies" target="_blank"><img src="../Images/linkedin_white.svg" alttext="" class="Hyperlinked" style="width: 20px;" /></a><a href="https://www.youtube.com/channel/UC3sHzKOfYlqtnjKLc0vRmaA" target="_blank"><img src="../Images/youtube_white.svg" alttext="" class="Hyperlinked" style="width: 20px;" /></a>
					</div> -->
                                         
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>